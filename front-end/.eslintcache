[{"/Users/ahaydar/workspace/tests/shopping-lists/front-end/src/index.tsx":"1","/Users/ahaydar/workspace/tests/shopping-lists/front-end/src/App.tsx":"2","/Users/ahaydar/workspace/tests/shopping-lists/front-end/src/components/ShoppingListSummary.tsx":"3","/Users/ahaydar/workspace/tests/shopping-lists/front-end/src/components/ShoppingListComponent.tsx":"4","/Users/ahaydar/workspace/tests/shopping-lists/front-end/src/components/Home.tsx":"5"},{"size":220,"mtime":1610856864689,"results":"6","hashOfConfig":"7"},{"size":465,"mtime":1610858628998,"results":"8","hashOfConfig":"7"},{"size":574,"mtime":1610855774781,"results":"9","hashOfConfig":"7"},{"size":1190,"mtime":1610863204788,"results":"10","hashOfConfig":"7"},{"size":1071,"mtime":1610862695142,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ffrlsk",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"/Users/ahaydar/workspace/tests/shopping-lists/front-end/src/index.tsx",[],["26","27"],"/Users/ahaydar/workspace/tests/shopping-lists/front-end/src/App.tsx",[],"/Users/ahaydar/workspace/tests/shopping-lists/front-end/src/components/ShoppingListSummary.tsx",[],["28","29"],"/Users/ahaydar/workspace/tests/shopping-lists/front-end/src/components/ShoppingListComponent.tsx",["30","31"],"import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Item, ShoppingList } from '../types';\n\nexport interface ShoppingListIdRouteParams {\n  id: string;\n}\n\nconst ShoppingListComponent = () => {\n  const url =\n    'https://gobf8rpbvd.execute-api.us-east-1.amazonaws.com/dev/shoppingLists'; //TODO: read from an environment variable\n\n  const [shoppingList, setShoppingList] = useState<ShoppingList>();\n\n  const { id } = useParams<ShoppingListIdRouteParams>();\n\n  // It is not necessary to do another call here to retrieve a single shopping list data, as we have that data in the first api call on the parent; we'd use Redux in this case and manage a store\n  useEffect(() => {\n    fetch(`${url}/${id}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setShoppingList(data);\n      });\n  }, []);\n\n  const ShoppingListItems = shoppingList?.items.map((item) => (\n    <li key={item.id}>\n      {item.name} ({item.price})\n    </li>\n  ));\n  return (\n    <div>\n      <h1>{shoppingList?.name}</h1>\n      <h2>{shoppingList?.description}</h2>\n      {ShoppingListItems}\n    </div>\n  );\n};\n\nexport default ShoppingListComponent;\n","/Users/ahaydar/workspace/tests/shopping-lists/front-end/src/components/Home.tsx",["32"],"import React, { useEffect, useState } from 'react';\nimport ShoppingListSummary from './ShoppingListSummary';\nimport { ShoppingList, Item } from '../types';\n\nconst Home = () => {\n  const url =\n    'https://gobf8rpbvd.execute-api.us-east-1.amazonaws.com/dev/shoppingLists'; //TODO: read from an environment variable\n\n  const [shoppingLists, setShoppingLists] = useState([]);\n  useEffect(() => {\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setShoppingLists(data);\n      });\n  }, []);\n\n  const ShoppingLists = shoppingLists.map((shoppingList: ShoppingList) => {\n    const shoppingListId = shoppingList.id.split('#')[1];\n    return (\n      <ShoppingListSummary\n        key={shoppingListId}\n        shoppingListId={shoppingListId}\n        shoppingListName={shoppingList.name}\n        itemsNumber={shoppingList.items.length}\n      />\n    );\n  });\n\n  return (\n    <div className=\"app\">\n      <h1>Awesome shopping lists</h1>\n      <ul className=\"shopping-lists-container\">{ShoppingLists}</ul>\n    </div>\n  );\n};\n\nexport default Home;\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"33","replacedBy":"37"},{"ruleId":"35","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":3,"column":10,"nodeType":"41","messageId":"42","endLine":3,"endColumn":14},{"ruleId":"43","severity":1,"message":"44","line":24,"column":6,"nodeType":"45","endLine":24,"endColumn":8,"suggestions":"46"},{"ruleId":"39","severity":1,"message":"40","line":3,"column":24,"nodeType":"41","messageId":"42","endLine":3,"endColumn":28},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],["47"],["48"],"@typescript-eslint/no-unused-vars","'Item' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [id]",{"range":"52","text":"53"},[864,866],"[id]"]